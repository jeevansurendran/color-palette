{"version":3,"sources":["components/Colors/Color/Color.module.css","components/Add/Add.module.css","components/Colors/Color/Color.js","components/Add/Add.js","components/Colors/Colors.js","containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","Color","props","showOverlay","setState","isShowingOverlay","hideOverlay","state","style","background","this","color","r","g","b","a","className","styles","swatch","name","value","onChange","e","nameChange","index","onMouseOver","onMouseLeave","overlay","onClick","click","bind","delete","formatRgbToHex","formatRgb","formatRbgToCmyk","showPicker","popover","cover","close","change","Component","toString","slice","toUpperCase","k","Math","min","c","m","y","round","Add","plus","add","onAccept","onCancel","cancel","Colors","LOCAL_STORAGE_KEY","componentDidMount","console","log","localStorage","getItem","colors","JSON","parse","componentDidUpdate","saveColors","handleClick","newState","isOpen","forEach","ele","handleChange","rgb","handleClose","handleDelete","splice","addClick","addChange","addClose","push","addCancel","handleNameChange","target","setItem","stringify","map","key","length","textAlign","App","margin","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.baa5b753.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"swatch\":\"Color_swatch__3VTyZ\",\"color\":\"Color_color__3sY6g\",\"popover\":\"Color_popover__3jBMr\",\"cover\":\"Color_cover__3889D\",\"overlay\":\"Color_overlay__2aBmd\",\"name\":\"Color_name__2K7aU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"swatch\":\"Add_swatch__14rP1\",\"color\":\"Add_color__2AbcM\",\"plus\":\"Add_plus__24wbR\",\"popover\":\"Add_popover__3TrdO\",\"cover\":\"Add_cover__1W0Zo\"};","import React, { Component } from \"react\";\nimport { SketchPicker } from \"react-color\";\nimport styles from \"./Color.module.css\";\n\nclass Color extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            isShowingOverlay: false\n        }\n    }\n\n    showOverlay = () => {\n        this.setState({ isShowingOverlay: true })\n    }\n\n    hideOverlay = () => {\n        this.setState({ isShowingOverlay: false })\n    }\n\n\n    render() {\n        const style = {\n            background: `rgba(${this.props.color.color.r}, ${this.props.color.color.g}\n                , ${this.props.color.color.b}, ${this.props.color.color.a})`,\n        };\n        return (\n            <div className={styles.swatch} >\n                <div>\n                    <input className={styles.name} value={this.props.color.name}\n                    onChange={(e)=>this.props.nameChange(this.props.index, e)}/>\n                    <div style={style} className={styles.color} onMouseOver={this.showOverlay} onMouseLeave={this.hideOverlay}>\n                        {this.state.isShowingOverlay ? (<div className={styles.overlay}>\n                            <button onClick={this.props.click.bind(this, this.props.index)}>edit</button>\n                            <button onClick={this.props.delete.bind(this, this.props.index)}>delete</button>                            \n                            </div>) : null}\n                    </div>\n                    <p> {formatRgbToHex(this.props.color.color)} </p>\n                    <p> {formatRgb(this.props.color.color)} </p>\n                    <p> {formatRbgToCmyk(this.props.color.color)} </p>\n                </div>\n                {this.props.color.showPicker ? (\n                    <div className={styles.popover}>\n                        <div className={styles.cover} onClick={this.props.close.bind(this, this.props.index)} />\n                        <SketchPicker\n                            color={this.props.color.color}\n                            onChange={(color) =>\n                                this.props.change(this.props.index, color)\n                            }\n                        />\n                    </div>\n                ) : null}\n\n            </div>\n        );\n    }\n}\n\n\n\nconst formatRgbToHex = (color) => {\n    return \"HEX #\" + ((1 << 24) + (color.r << 16) + (color.g << 8) + color.b).toString(16).slice(1).toUpperCase();\n};\n\nconst formatRgb = (color) => {\n    return `RGB ${color.r} / ${color.g} / ${color.b}`;\n};\nconst formatRbgToCmyk = (color) => {\n    const r = color.r / 255;\n    const g = color.g / 255;\n    const b = color.b / 255;\n\n    let k = Math.min(1 - r, 1 - g, 1 - b);\n    let c = (1 - r - k) / (1 - k);\n    let m = (1 - g - k) / (1 - k);\n    let y = (1 - b - k) / (1 - k);\n\n    c = Math.round(c * 100);\n    m = Math.round(m * 100);\n    y = Math.round(y * 100);\n    k = Math.round(k * 100);\n\n    return `CMYK ${c} / ${m} / ${y} / ${k}`;\n};\n\nexport default Color;\n","import React, { Component } from \"react\";\nimport styles from \"./Add.module.css\"\nimport { PhotoshopPicker } from 'react-color'\n\nclass Add extends Component {\n    render() {\n        return (\n            <div className={styles.swatch}>\n                <div className={styles.color} onClick={this.props.click} >\n                    <p className={styles.plus}>+</p>\n                </div>\n                {this.props.add.showPicker ? <div className={styles.popover}>\n                <PhotoshopPicker color={this.props.add.color}\n                        onAccept={this.props.close}\n                        onCancel={this.props.cancel}\n                        onChange={this.props.change} />\n                </div> : null}\n                <p>.</p>\n                <p>.</p>\n                <p>.</p>\n            </div>\n        );\n    }\n}\nexport default Add;","import React, { Component } from 'react'\nimport Color from './Color/Color'\nimport Add from '../Add/Add'\n\nclass Colors extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            colors: [],\n            add: {\n                showPicker: false,\n                name: 'New Color',\n                color : {\n                    rgb: {\n                        r: 241,\n                        g: 112,\n                        b: 19\n                    }\n                }\n            }\n        };\n    }\n\n    LOCAL_STORAGE_KEY = 'colors'\n\n    render() {\n        var style = {\n            textAlign: \"center\"\n        }\n\n        const colors = this.state.colors.map((color, index) => {\n            return <Color\n                color={color}\n                key={index}\n                index={index}\n                nameChange={this.handleNameChange}\n                click={this.handleClick}\n                change={this.handleChange}\n                close={this.handleClose}\n                delete={this.handleDelete}\n            />\n        })\n        colors.push(\n            <Add\n                key={colors.length}\n                add={this.state.add}\n                close={this.addClose}\n                click={this.addClick}\n                change={this.addChange}\n                cancel={this.addCancel}\n            />)\n        return <div style={style}>\n            {colors}\n        </div>\n    }\n\n    componentDidMount = () => {\n        console.log('mount')\n        localStorage.getItem(this.LOCAL_STORAGE_KEY) && this.setState({colors: JSON.parse(localStorage.getItem('colors'))})\n    }\n\n    componentDidUpdate =() => {\n        this.saveColors(this.state)\n    }\n\n    handleClick = (index) => {\n        const newState = { ...this.state }\n        const isOpen = newState.colors[index].showPicker\n        newState.colors.forEach(ele => {\n            ele.showPicker = false\n        })\n        newState.colors[index].showPicker = !isOpen\n        this.setState(newState)\n    };\n    handleChange = (index, color) => {\n        const newState = { ...this.state }\n        newState.colors[index].color = color.rgb\n        this.setState(newState)\n    };\n\n    handleClose = (index) => {\n        const newState = { ...this.state }\n        newState.colors[index].showPicker = false\n        this.setState(newState)\n    }\n\n    handleDelete = (index) => {\n        const newState = { ...this.state }\n        newState.colors.splice(index, 1)\n        this.setState(newState)\n    }\n\n    addClick = () => {\n        const newState = { ...this.state }\n        newState.colors.forEach(ele => {\n            ele.showPicker = false\n        })\n        newState.add.showPicker = true\n        this.setState(newState)\n    }\n    addChange = (color) => {\n        const newState = { ...this.state }\n        newState.add.color = color\n        this.setState(newState)\n    }\n\n    addClose = () => {\n        console.log('close')\n        const newState = { ...this.state }\n        newState.add.showPicker = false\n        newState.colors.push({ showPicker: false,name : this.state.add.name, color: newState.add.color.rgb })\n        this.setState(newState)\n    }\n    addCancel = () => {\n        console.log('cancel')\n        const newState = { ...this.state }\n        newState.add.showPicker = false\n        this.setState(newState)\n    }\n    handleNameChange = (index, e) => {\n        const newState = { ...this.state }\n        newState.colors[index].name = e.target.value\n        this.setState(newState)\n    }\n\n    saveColors = (newState) => {\n        localStorage.setItem(this.LOCAL_STORAGE_KEY, JSON.stringify(newState.colors))\n    }\n}\n\nexport default Colors","import React from 'react';\nimport './App.css';\nimport Colors from '../components/Colors/Colors';\n\nconst App  = props => {\n\n    const colorHeadingStyle = {\n      margin:'20px',\n      \n    }  \n\n    return (\n      <div>\n        <h3 style={colorHeadingStyle}>Color palette (click + to add colors)</h3>\n        <Colors />\n      </div>\n    )\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}